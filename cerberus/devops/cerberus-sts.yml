---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cerberus-server
  namespace: openshift-bcgov-cerberus
  labels:
    app: cerberus
spec:
  replicas: 3
  selector:
    matchLabels:
      tool: Cerberus
  template:
    metadata:
      labels:
        tool: Cerberus
    spec:
      serviceAccountName: cerberus
      imagePullSecrets:
        - name: artifacts-platsvcs-reader
      containers:
        - name: cerberus
          imagePullPolicy: Always
          # NOTE: Dockerfile changes filesystem permission for monitoring output storage. otherwise we'll need to use privileged account
          # securityContext:
          #   privileged: true
          image: artifacts.developer.gov.bc.ca/plat-util-images/cerberus:test
          command: ["/bin/sh", "-c"]
          args: ["/usr/local/bin/entrypoint.sh"]
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: '1'
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - mountPath: "/tmp/kubeconfig-template"
              subPath: kubeconfig-template
              name: kubeconfig
            - mountPath: "/tmp/cerberus-config-template.yaml"
              subPath: cerberus-config-template.yaml
              name: cerberus-config
            - mountPath: /tmp/data
              name: cerberus-storage
      volumes:
        - name: kubeconfig
          configMap:
            name: kube-config
        - name: cerberus-config
          configMap:
            name: cerberus-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: netapp-file-standard
        labels:
          tool: Cerberus
        name: cerberus-storage
      spec:
        storageClassName: netapp-file-standard
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: cerberus-service
  namespace: openshift-bcgov-cerberus
  labels:
    app: cerberus
spec:
  type: NodePort
  selector:
    tool: Cerberus
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30000
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: cerberus-service
  namespace: openshift-bcgov-cerberus
  labels:
    app: cerberus
spec:
  port:
    targetPort: 8080
  to:
    kind: Service
    name: cerberus-service
    weight: 100
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
